{"data":{"site":{"siteMetadata":{"title":"Christian Brevik","author":"Christian Brevik"}},"markdownRemark":{"id":"e6fdf7c0-5790-542d-9c66-929683a528c6","excerpt":"I just released v1.0 of my  React Native Billing  library. Sometimes the things you make for your own needs, is useful for other people asâ€¦","html":"<p>I just released v1.0 of my <a href=\"https://github.com/idehub/react-native-billing\">React Native Billing</a> library. Sometimes the things you make for your own needs, is useful for other people as well!</p>\n<p>The library came about because I needed InApp Billing support in an Android app made with React Native. Since there was no other Billing-plugins available, I just implemented a simple bridge for the app, wrapping the excellent <a href=\"https://github.com/anjlab/android-inapp-billing-v3\">anjlab InApp</a> library.</p>\n<p>Later on, I noticed people on the <a href=\"http://www.reactiflux.com/\">reactiflux</a> chat asking for an InApp Billing implementation, and decided to release my own simple bridge.</p>\n<p>This has been much improved upon since, with stability improvements and a much <a href=\"https://github.com/idehub/react-native-billing#javascript-api\">larger API</a>. You do not need much JavaScript-code to use the API:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> InAppBilling <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react-native-billing'</span><span class=\"token punctuation\">)</span>\n\nInAppBilling<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> InAppBilling<span class=\"token punctuation\">.</span><span class=\"token function\">purchase</span><span class=\"token punctuation\">(</span><span class=\"token string\">'android.test.purchased'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>details <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You purchased: '</span><span class=\"token punctuation\">,</span> details<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> InAppBilling<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>In order to begin any operation that calls the Google Play API, like <code class=\"language-text\">purchase</code> or <code class=\"language-text\">getProductDetails</code>, you will need to call <code class=\"language-text\">open()</code>. This is in order to open the service channel to Google Play.</p>\n<p>After that, you can call for example <code class=\"language-text\">purchase</code>, and deal with the response. Since every operation returns a Promise, you may also string several operations after one another.</p>\n<p>Finally, you will have to call <code class=\"language-text\">close()</code> after you are done. This is very important since failure to close the Google Play service channel may degrade the performance of the app.</p>\n<p>Quite simple! Visit the <a href=\"https://github.com/idehub/react-native-billing\">Github repo</a> for an installation guide and API.</p>","frontmatter":{"title":"React Native InApp Billing","date":"February 09, 2016"}}},"pageContext":{"slug":"/react-native-inapp-billing/","previous":{"fields":{"slug":"/google-analytics-on-react-native/"},"frontmatter":{"title":"Google Analytics on React Native"}},"next":{"fields":{"slug":"/gtm-ab-testing/"},"frontmatter":{"title":"Google Tag Manager and A/B-testing with React Native"}}}}