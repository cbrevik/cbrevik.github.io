{"data":{"site":{"siteMetadata":{"title":"Christian Brevik","author":"Christian Brevik"}},"markdownRemark":{"id":"5dede29c-81a6-575b-a41e-82cbfee9e2e2","excerpt":"This weekend I did talk on  SOLID  at the  Knowit  Developer Summit 2014 in Stockholm. These five principles are well known to most ASP.NET…","html":"<p>This weekend I did talk on <a href=\"http://en.wikipedia.org/wiki/SOLID_(object-oriented_design)\">SOLID</a> at the <a href=\"http://www.knowit.no/\">Knowit</a> Developer Summit 2014 in Stockholm. These five principles are well known to most ASP.NET developers, but it can be difficult to be aware of them in the day-to-day.</p>\n<p>Some of the time they are applied instinctively. You just make the code “feel right”. To illuminate the situations where SOLID might be applicable, I demonstrated the principles by refactoring an ASP.NET solution on stage.</p>\n<p>And just to make it even more difficult for myself, I did it in:</p>\n<ul>\n<li>An alpha version of ASP.NET vNext.</li>\n<li>On OS X.</li>\n<li>In Sublime Text 3.</li>\n</ul>\n<p>I was asked to give a little bit of info on the tools I used, and how to get up-and-running. The following will be a simple guide.</p>\n<p>Presupposing some knowledge of what vNext is (if not read this <a href=\"http://www.hanselman.com/blog/IntroducingASPNETVNext.aspx\">introduction</a>), let’s soldier on!</p>\n<h2>Getting Started</h2>\n<p>One of the many good things about ASP.NET vNext, is that Microsoft are using Github!\nThere you’ll find the <a href=\"https://github.com/aspnet/Home\">Home repository</a> which has samples and an install guide.</p>\n<p>For OS X I’ll reprint the install guide here, it’s quite straightforward.</p>\n<ul>\n<li>Install <a href=\"http://brew.sh/\">Homebrew</a> if it is not already installed.</li>\n<li>Run command <code class=\"language-text\">brew tap aspnet/k</code> to tap the ASP.NET vNext related git repositories. If you had already tapped the repo for previous releases, run <code class=\"language-text\">brew untap aspnet/k</code> to delete the old commands and tap again to get the updated brew scripts.</li>\n<li>Run command <code class=\"language-text\">brew install kvm</code> to install KVM. This also automatically install the latest KRE package from <a href=\"https://www.myget.org/f/aspnetmaster/api/v2\">https://www.myget.org/f/aspnetmaster/api/v2</a> feed.</li>\n<li>Run command <code class=\"language-text\">source kvm.sh</code> on your terminal if your terminal cannot understand kvm.</li>\n</ul>\n<p>I’d recommend putting <code class=\"language-text\">source kvm.sh</code> in your <b>~/.bash_profile</b> as well. Now you have the latest ASP.NET version installed!</p>\n<h2>The tools</h2>\n<p>Next you’ll have to install <a href=\"http://www.sublimetext.com/3\">Sublime Text 3</a> if you don’t already have it.\nWe can install two helpful extensions in Sublime Text 3 to make our life easier.</p>\n<p>To do this you need the <a href=\"https://sublime.wbond.net/installation#st3\">Package Control</a>, see the link for instructions. Afterwards do the following steps in Sublime Text to install the extensions:</p>\n<ul>\n<li>Bring up the Command Palette (Cmd + Shift + P).</li>\n<li>Select <code class=\"language-text\">Package Control: Install Package</code>.</li>\n<li>Select <code class=\"language-text\">Kulture</code> when the list appears.</li>\n</ul>\n<p>Then do it again, but on the third step select <code class=\"language-text\">OmniSharp</code>.</p>\n<p>These two excellent extensions gives you a much richer experience with developing ASP.NET in Sublime Text.</p>\n<ul>\n<li><a href=\"https://github.com/ligershark/Kulture\">Kulture</a> gives you the ability to:\n_ Build, press Cmd + B.\n_ Run K commands, press Cmd + Shift + P and then Run K Commands. This means for example you can start the server k kestrel or restore packages with <code class=\"language-text\">kpm restore</code> in Sublime Text.</li>\n<li><a href=\"https://github.com/moonrabbit/OmniSharpSublime\">OmniSharp</a> gives you Intellisense inside Sublime Text, and so much more. See the link for more details.</li>\n</ul>\n<h2>Putting it to good use</h2>\n<p>Next I would recommend and cloning the Home repository from the ASP.NET-team, and play around with the samples:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone git@github.com:aspnet/Home.git</code></pre></div>\n<p>The makers of the Kulture-extension also have a yeoman generator to get the ball rolling:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g yo\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g generator-aspnet</code></pre></div>\n<p>That about wraps it up, hope it’ll help you get started.</p>","frontmatter":{"title":"vNext tools on OS X","date":"October 26, 2014"}}},"pageContext":{"slug":"/vnext/","previous":null,"next":{"fields":{"slug":"/remote-debugging-vs2013/"},"frontmatter":{"title":"Remote debugging ASP .NET in Visual Studio 2013"}}}}